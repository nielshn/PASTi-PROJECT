{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = initHeadManager;\nvar DOMAttributeNames = {\n  acceptCharset: 'accept-charset',\n  className: 'class',\n  htmlFor: 'for',\n  httpEquiv: 'http-equiv'\n};\nfunction reactElementToDOM(_ref) {\n  var type = _ref.type,\n    props = _ref.props;\n  var el = document.createElement(type);\n  for (var p in props) {\n    if (!props.hasOwnProperty(p)) continue;\n    if (p === 'children' || p === 'dangerouslySetInnerHTML') continue; // we don't render undefined props to the DOM\n    if (props[p] === undefined) continue;\n    var attr = DOMAttributeNames[p] || p.toLowerCase();\n    el.setAttribute(attr, props[p]);\n  }\n  var children = props.children,\n    dangerouslySetInnerHTML = props.dangerouslySetInnerHTML;\n  if (dangerouslySetInnerHTML) {\n    el.innerHTML = dangerouslySetInnerHTML.__html || '';\n  } else if (children) {\n    el.textContent = typeof children === 'string' ? children : children.join('');\n  }\n  return el;\n}\nfunction updateElements(type, components) {\n  var headEl = document.getElementsByTagName('head')[0];\n  var headCountEl = headEl.querySelector('meta[name=next-head-count]');\n  if (true) {\n    if (!headCountEl) {\n      console.error('Warning: next-head-count is missing. https://err.sh/next.js/next-head-count-missing');\n      return;\n    }\n  }\n  var headCount = Number(headCountEl.content);\n  var oldTags = [];\n  for (var i = 0, j = headCountEl.previousElementSibling; i < headCount; i++, j = j.previousElementSibling) {\n    if (j.tagName.toLowerCase() === type) {\n      oldTags.push(j);\n    }\n  }\n  var newTags = components.map(reactElementToDOM).filter(function (newTag) {\n    for (var k = 0, len = oldTags.length; k < len; k++) {\n      var oldTag = oldTags[k];\n      if (oldTag.isEqualNode(newTag)) {\n        oldTags.splice(k, 1);\n        return false;\n      }\n    }\n    return true;\n  });\n  oldTags.forEach(function (t) {\n    return t.parentNode.removeChild(t);\n  });\n  newTags.forEach(function (t) {\n    return headEl.insertBefore(t, headCountEl);\n  });\n  headCountEl.content = (headCount - oldTags.length + newTags.length).toString();\n}\nfunction initHeadManager() {\n  var updatePromise = null;\n  return function (head) {\n    var promise = updatePromise = Promise.resolve().then(function () {\n      if (promise !== updatePromise) return;\n      updatePromise = null;\n      var tags = {};\n      head.forEach(function (h) {\n        var components = tags[h.type] || [];\n        components.push(h);\n        tags[h.type] = components;\n      });\n      var titleComponent = tags.title ? tags.title[0] : null;\n      var title = '';\n      if (titleComponent) {\n        var children = titleComponent.props.children;\n        title = typeof children === 'string' ? children : children.join('');\n      }\n      if (title !== document.title) document.title = title;\n      ['meta', 'base', 'link', 'style', 'script'].forEach(function (type) {\n        updateElements(type, tags[type] || []);\n      });\n    });\n  };\n}","map":{"version":3,"sources":["../../client/head-manager.js"],"names":["DOMAttributeNames","acceptCharset","className","htmlFor","httpEquiv","reactElementToDOM","type","props","el","document","createElement","p","hasOwnProperty","undefined","attr","toLowerCase","setAttribute","children","dangerouslySetInnerHTML","innerHTML","__html","textContent","join","updateElements","components","headEl","getElementsByTagName","headCountEl","querySelector","console","error","headCount","Number","content","oldTags","i","j","previousElementSibling","tagName","push","newTags","map","filter","newTag","k","len","length","oldTag","isEqualNode","splice","forEach","t","parentNode","removeChild","insertBefore","toString","initHeadManager","updatePromise","head","promise","Promise","resolve","then","tags","h","titleComponent","title"],"mappings":"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","sourcesContent":["const DOMAttributeNames = {\n  acceptCharset: 'accept-charset',\n  className: 'class',\n  htmlFor: 'for',\n  httpEquiv: 'http-equiv',\n}\n\nfunction reactElementToDOM({ type, props }) {\n  const el = document.createElement(type)\n  for (const p in props) {\n    if (!props.hasOwnProperty(p)) continue\n    if (p === 'children' || p === 'dangerouslySetInnerHTML') continue\n\n    // we don't render undefined props to the DOM\n    if (props[p] === undefined) continue\n\n    const attr = DOMAttributeNames[p] || p.toLowerCase()\n    el.setAttribute(attr, props[p])\n  }\n\n  const { children, dangerouslySetInnerHTML } = props\n  if (dangerouslySetInnerHTML) {\n    el.innerHTML = dangerouslySetInnerHTML.__html || ''\n  } else if (children) {\n    el.textContent = typeof children === 'string' ? children : children.join('')\n  }\n  return el\n}\n\nfunction updateElements(type, components) {\n  const headEl = document.getElementsByTagName('head')[0]\n  const headCountEl = headEl.querySelector('meta[name=next-head-count]')\n  if (process.env.NODE_ENV !== 'production') {\n    if (!headCountEl) {\n      console.error(\n        'Warning: next-head-count is missing. https://err.sh/next.js/next-head-count-missing'\n      )\n      return\n    }\n  }\n\n  const headCount = Number(headCountEl.content)\n  const oldTags = []\n\n  for (\n    let i = 0, j = headCountEl.previousElementSibling;\n    i < headCount;\n    i++, j = j.previousElementSibling\n  ) {\n    if (j.tagName.toLowerCase() === type) {\n      oldTags.push(j)\n    }\n  }\n  const newTags = components.map(reactElementToDOM).filter((newTag) => {\n    for (let k = 0, len = oldTags.length; k < len; k++) {\n      const oldTag = oldTags[k]\n      if (oldTag.isEqualNode(newTag)) {\n        oldTags.splice(k, 1)\n        return false\n      }\n    }\n    return true\n  })\n\n  oldTags.forEach((t) => t.parentNode.removeChild(t))\n  newTags.forEach((t) => headEl.insertBefore(t, headCountEl))\n  headCountEl.content = (headCount - oldTags.length + newTags.length).toString()\n}\n\nexport default function initHeadManager() {\n  let updatePromise = null\n\n  return (head) => {\n    const promise = (updatePromise = Promise.resolve().then(() => {\n      if (promise !== updatePromise) return\n\n      updatePromise = null\n      const tags = {}\n\n      head.forEach((h) => {\n        const components = tags[h.type] || []\n        components.push(h)\n        tags[h.type] = components\n      })\n\n      const titleComponent = tags.title ? tags.title[0] : null\n      let title = ''\n      if (titleComponent) {\n        const { children } = titleComponent.props\n        title = typeof children === 'string' ? children : children.join('')\n      }\n      if (title !== document.title) document.title = title\n      ;['meta', 'base', 'link', 'style', 'script'].forEach((type) => {\n        updateElements(type, tags[type] || [])\n      })\n    }))\n  }\n}\n"]},"metadata":{},"sourceType":"script"}