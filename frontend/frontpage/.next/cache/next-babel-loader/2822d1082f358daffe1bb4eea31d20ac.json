{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\nvar next = _interopRequireWildcard(require(\"./\"));\nvar _eventSourcePolyfill = _interopRequireDefault(require(\"./dev/event-source-polyfill\"));\nvar _onDemandEntriesClient = _interopRequireDefault(require(\"./dev/on-demand-entries-client\"));\nvar _webpackHotMiddlewareClient = _interopRequireDefault(require(\"./dev/webpack-hot-middleware-client\"));\nvar _devBuildWatcher = _interopRequireDefault(require(\"./dev/dev-build-watcher\"));\nvar _prerenderIndicator = _interopRequireDefault(require(\"./dev/prerender-indicator\"));\nvar _fouc = require(\"./dev/fouc\"); /* globals import('./dev/noop'); */ // Temporary workaround for the issue described here:\n// https://github.com/vercel/next.js/issues/3775#issuecomment-407438123\n// The runtimeChunk doesn't have dynamic import handling code when there hasn't been a dynamic import\n// The runtimeChunk can't hot reload itself currently to correct it when adding pages using on-demand-entries\n// eslint-disable-next-line no-unused-expressions\nimport('./dev/noop');\n; // Support EventSource on Internet Explorer 11\nif (!window.EventSource) {\n  window.EventSource = _eventSourcePolyfill[\"default\"];\n}\nvar _window = window,\n  assetPrefix = _window.__NEXT_DATA__.assetPrefix;\nvar prefix = assetPrefix || '';\nvar webpackHMR = (0, _webpackHotMiddlewareClient[\"default\"])({\n  assetPrefix: prefix\n});\nwindow.next = next;\n(0, next[\"default\"])({\n  webpackHMR: webpackHMR\n}).then(function (_ref) {\n  var emitter = _ref.emitter,\n    renderCtx = _ref.renderCtx,\n    render = _ref.render;\n  (0, _onDemandEntriesClient[\"default\"])({\n    assetPrefix: prefix\n  });\n  if (process.env.__NEXT_BUILD_INDICATOR) (0, _devBuildWatcher[\"default\"])();\n  if (process.env.__NEXT_PRERENDER_INDICATOR &&\n  // disable by default in electron\n  !(typeof process !== 'undefined' && 'electron' in process.versions)) {\n    (0, _prerenderIndicator[\"default\"])();\n  } // delay rendering until after styles have been applied in development\n  (0, _fouc.displayContent)(function () {\n    render(renderCtx);\n  });\n})[\"catch\"](function (err) {\n  console.error('Error was not caught', err);\n});","map":{"version":3,"sources":["../../client/next-dev.js"],"names":["__REPLACE_NOOP_IMPORT__","window","EventSource","EventSourcePolyfill","__NEXT_DATA__","assetPrefix","prefix","webpackHMR","next","then","emitter","renderCtx","render","process","env","__NEXT_BUILD_INDICATOR","__NEXT_PRERENDER_INDICATOR","versions","err","console","error"],"mappings":";;;;AACA,IAAA,IAAA,GAAA,uBAAA,CAAA,OAAA,CAAA,IAAA,CAAA,CAAA;AACA,IAAA,oBAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,6BAAA,CAAA,CAAA;AACA,IAAA,sBAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,gCAAA,CAAA,CAAA;AACA,IAAA,2BAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,qCAAA,CAAA,CAAA;AACA,IAAA,gBAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,yBAAA,CAAA,CAAA;AACA,IAAA,mBAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,2BAAA,CAAA,CAAA;AACA,IAAA,KAAA,GAAA,OAAA,CAAA,YAAA,CAAA,CAPA,qCAAA;AAUA;AACA;AACA;AACA;AACAA,MAAAA,CAAAA,YAAAA,CAAAA;AAAAA,CAAAA;AAGA,IAAI,CAACC,MAAM,CAACC,WAAZ,EAAyB;EACvBD,MAAM,CAACC,WAAPD,GAAqBE,oBAAAA,WAArBF;AACD;AAED,IAAA,OAAA,GAEIA,MAFJ;EACmBI,WADb,GAAA,OAAA,CACJD,aAAa,CAAIC,WADb;AAIN,IAAMC,MAAM,GAAGD,WAAW,IAAI,EAA9B;AACA,IAAME,UAAU,GAAG,CAAA,CAAA,EAAA,2BAAA,WAAA,EAAe;EAAEF,WAAW,EAAEC;AAAf,CAAf,CAAnB;AAEAL,MAAM,CAACO,IAAPP,GAAcO,IAAdP;AACA,CAAA,CAAA,EAAA,IAAA,WAAA,EAAS;EAAEM,UAAF,EAAEA;AAAF,CAAT,CAAA,CACGE,IADH,CACQ,UAAA,IAAA,EAAoC;EAAA,IAAjCC,OAAF,GAAA,IAAA,CAAEA,OAAF;IAAWC,SAAX,GAAA,IAAA,CAAWA,SAAX;IAAsBC,MAAvB,GAAA,IAAA,CAAuBA,MAAvB;EACJ,CAAA,CAAA,EAAA,sBAAA,WAAA,EAAoB;IAAEP,WAAW,EAAEC;EAAf,CAApB,CAAA;EACA,IAAIO,OAAO,CAACC,GAARD,CAAYE,sBAAhB,EAAwC,CAAA,CAAA,EAAA,gBAAA,WAAA,EAAA,CAAA;EACxC,IACEF,OAAO,CAACC,GAARD,CAAYG,0BAAZH;EACA;EACA,EAAE,OAAOA,OAAP,KAAmB,WAAnB,IAAkC,UAAA,IAAcA,OAAO,CAACI,QAA1D,CAHF,EAIE;IACA,CAAA,CAAA,EAAA,mBAAA,WAAA,EAAA,CAAA;EACD,CAED;EACA,CAAA,CAAA,EAAA,KAAA,CAAA,cAAA,EAAe,YAAM;IACnBL,MAAM,CAACD,SAAD,CAANC;EACD,CAFD,CAAA;AAGD,CAhBH,CAAA,SAAA,CAiBUM,UAAAA,GAAD,EAAS;EACdC,OAAO,CAACC,KAARD,CAAc,sBAAdA,EAAsCD,GAAtCC,CAAAA;AACD,CAnBH,CAAA","sourcesContent":["/* globals __REPLACE_NOOP_IMPORT__ */\nimport initNext, * as next from './'\nimport EventSourcePolyfill from './dev/event-source-polyfill'\nimport initOnDemandEntries from './dev/on-demand-entries-client'\nimport initWebpackHMR from './dev/webpack-hot-middleware-client'\nimport initializeBuildWatcher from './dev/dev-build-watcher'\nimport initializePrerenderIndicator from './dev/prerender-indicator'\nimport { displayContent } from './dev/fouc'\n\n// Temporary workaround for the issue described here:\n// https://github.com/vercel/next.js/issues/3775#issuecomment-407438123\n// The runtimeChunk doesn't have dynamic import handling code when there hasn't been a dynamic import\n// The runtimeChunk can't hot reload itself currently to correct it when adding pages using on-demand-entries\n// eslint-disable-next-line no-unused-expressions\n__REPLACE_NOOP_IMPORT__\n\n// Support EventSource on Internet Explorer 11\nif (!window.EventSource) {\n  window.EventSource = EventSourcePolyfill\n}\n\nconst {\n  __NEXT_DATA__: { assetPrefix },\n} = window\n\nconst prefix = assetPrefix || ''\nconst webpackHMR = initWebpackHMR({ assetPrefix: prefix })\n\nwindow.next = next\ninitNext({ webpackHMR })\n  .then(({ emitter, renderCtx, render }) => {\n    initOnDemandEntries({ assetPrefix: prefix })\n    if (process.env.__NEXT_BUILD_INDICATOR) initializeBuildWatcher()\n    if (\n      process.env.__NEXT_PRERENDER_INDICATOR &&\n      // disable by default in electron\n      !(typeof process !== 'undefined' && 'electron' in process.versions)\n    ) {\n      initializePrerenderIndicator()\n    }\n\n    // delay rendering until after styles have been applied in development\n    displayContent(() => {\n      render(renderCtx)\n    })\n  })\n  .catch((err) => {\n    console.error('Error was not caught', err)\n  })\n"]},"metadata":{},"sourceType":"script"}